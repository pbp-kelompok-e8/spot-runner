# Generated by Django 5.2.7 on 2025-10-23 16:53

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('event', '0002_initial'),
        ('event_organizer', '0002_remove_eventorganizer_created_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('fun_run', 'Fun Run'), ('5k', '5K'), ('10k', '10K'), ('half_marathon', 'Half Marathon'), ('full_marathon', 'Full Marathon')], max_length=20, unique=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='event',
            name='organizer',
        ),
        migrations.AddField(
            model_name='event',
            name='capacity',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='event',
            name='coin',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='event',
            name='contact',
            field=models.CharField(max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='description',
            field=models.TextField(blank=True, default='No description available'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='event_status',
            field=models.CharField(choices=[('coming_soon', 'Coming Soon'), ('on_going', 'On Going'), ('finished', 'Finished')], default='coming_soon', max_length=20),
        ),
        migrations.AddField(
            model_name='event',
            name='full',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='image',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='image2',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='image3',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.CharField(choices=[('jakarta_barat', 'Jakarta Barat'), ('jakarta_pusat', 'Jakarta Pusat'), ('jakarta_selatan', 'Jakarta Selatan'), ('jakarta_timur', 'Jakarta Timur'), ('jakarta_utara', 'Jakarta Utara'), ('bekasi', 'Bekasi'), ('bogor', 'Bogor'), ('depok', 'Depok'), ('tangerang', 'Tangerang')], default='jakarta_barat', max_length=20),
        ),
        migrations.AddField(
            model_name='event',
            name='name',
            field=models.CharField(default='Untitled Event', max_length=255),
        ),
        migrations.AddField(
            model_name='event',
            name='regist_deadline',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='total_participans',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='event',
            name='user_eo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='event_organizer.eventorganizer'),
        ),
        migrations.AlterField(
            model_name='event',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='event',
            name='event_category',
            field=models.ManyToManyField(related_name='events', to='event.eventcategory'),
        ),
    ]
