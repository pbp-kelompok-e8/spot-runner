# Generated by Django 5.2.7 on 2025-10-24 10:47

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Merchandise',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('apparel', 'Apparel'), ('accessories', 'Accessories'), ('totebag', 'Tote Bag'), ('water_bottle', 'Water Bottle'), ('other', 'Other')], db_index=True, default='apparel', max_length=30)),
                ('price_coins', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merchandise', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MerchImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='merch_images/')),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('merchandise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='merchandise.merchandise')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='MerchVariant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sku', models.CharField(blank=True, max_length=64)),
                ('size', models.CharField(blank=True, choices=[('XS', 'XS'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL')], max_length=10)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('merchandise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='merchandise.merchandise')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('merchandise', 'size', 'sku')},
            },
        ),
        migrations.CreateModel(
            name='Redemption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price_per_item', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('total_coins', models.PositiveIntegerField()),
                ('redeemed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('merchandise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='redemptions', to='merchandise.merchandise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to=settings.AUTH_USER_MODEL)),
                ('variant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='redemptions', to='merchandise.merchvariant')),
            ],
            options={
                'ordering': ['-redeemed_at'],
            },
        ),
    ]
